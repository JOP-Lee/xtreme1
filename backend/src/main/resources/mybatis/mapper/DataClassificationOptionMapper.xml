<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ai.basic.x1.adapter.port.dao.mybatis.mapper.DataClassificationOptionMapper">


    <resultMap id="BaseResultMap" type="ai.basic.x1.adapter.port.dao.mybatis.model.DataClassificationOption">
        <id column="id" property="id" />
        <result column="dataset_id" property="datasetId" />
        <result column="data_id" property="dataId" />
        <result column="classification_id" property="classificationId" />
        <result column="attribute_id" property="attributeId" />
        <result column="option_name" property="optionName" />
        <result column="option_path" property="optionPath" typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="created_at" property="createdAt" />
        <result column="created_by" property="createdBy" />
        <result column="updated_at" property="updatedAt" />
        <result column="updated_by" property="updatedBy" />
    </resultMap>

    <!-- generic query result colum -->
    <sql id="Base_Column_List">
        id, dataset_id, data_id, classification_id, attribute_id, option_name, option_path,
        created_at, updated_at, created_by, updated_by
    </sql>

    <insert id="insertBatch">
        INSERT INTO data_classification_option (dataset_id, data_id, classification_id,
        attribute_id, option_name, option_path, created_by)
        VALUES
        <foreach collection="list" item="item"  separator=",">
            (
            #{item.datasetId},
            #{item.dataId},
            #{item.classificationId},
            #{item.attributeId},
            #{item.optionName},
            #{item.optionPath,jdbcType=OTHER,typeHandler=com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler},
            #{item.createdBy}
            )
        </foreach>
    </insert>

    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT cdss.*, tmp.dataAmount
        FROM data_classification_option cdss INNER JOIN data d ON cdss.data_id = d.id
                 INNER JOIN (
            SELECT attribute_id, count(*) as dataAmount
            FROM dataset_classification dc
                     INNER JOIN data_classification_option cds
                                ON dc.id = cds.classification_id
            WHERE cds.dataset_id = #{datasetId}
            GROUP BY cds.attribute_id, cds.option_name
            ORDER BY dataAmount DESC
        ) AS tmp ON cdss.attribute_id = tmp.attribute_id
        WHERE cdss.dataset_id = #{datasetId} AND d.is_deleted = false
    </select>


</mapper>